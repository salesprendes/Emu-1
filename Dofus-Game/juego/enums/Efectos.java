package juego.enums;

import java.util.HashMap;
import java.util.Map;
import java.util.NoSuchElementException;

public enum Efectos
{
	NINGUNO(0, Tipo.ESPECIAL),
	DIVORCIO(7, Tipo.UTILIZABLE),
	APRENDER_EMOTE(10, Tipo.UTILIZABLE),
	CURACION_2(81, Tipo.ARMA),
	ROBO_PA(84, Tipo.ARMA),
	ROBO_SUERTE(91, Tipo.ARMA),
	ROBO_FUERZA(92, Tipo.ARMA),
	ROBO_AGILIDAD(93, Tipo.ARMA),
	ROBO_INTELIGENCIA(94, Tipo.ARMA),
	ROBO_NEUTRAL(95, Tipo.ARMA),
	INFLIGE_DANOS_AGUA(96, Tipo.ARMA),
	INFLIGE_DANOS_FUERZA(97, Tipo.ARMA),
	INFLIGE_DANOS_AGILIDAD(98, Tipo.ARMA),
	INFLIGE_DANOS_INTELIGENCIA(99, Tipo.ARMA),
	INFLIGE_DANOS_NEUTRAL(100, Tipo.ARMA),
	RETIRAR_PA(101, Tipo.ARMA),
	CURACION(108, Tipo.ARMA),
	AGREGAR_VIDA(110, Tipo.UTILIZABLE),
	AGREGAR_PA(111, Tipo.CARACTERISTICAS),
	AGREGAR_DANOS(112, Tipo.CARACTERISTICAS),
	AGREGAR_MULTIPLICA_DANOS(114, Tipo.ESPECIAL),
	AGREGAR_GOLPES_CRITICOS(115, Tipo.CARACTERISTICAS),
	RETIRAR_ALCANCE(116, Tipo.CARACTERISTICAS),
	AGREGAR_ALCANCE(117, Tipo.CARACTERISTICAS),
	AGREGAR_FUERZA(118, Tipo.CARACTERISTICAS),
	AGREGAR_AGILIDAD(119, Tipo.CARACTERISTICAS),
	AGREGAR_PA2(120, Tipo.CARACTERISTICAS),
	AGREGAR_DANOS2(121, Tipo.CARACTERISTICAS),
	AGREGAR_FALLOS_CRITICOS(122, Tipo.CARACTERISTICAS),
	AGREGAR_SUERTE(123, Tipo.CARACTERISTICAS),
	AGREGAR_SABIDURIA(124, Tipo.CARACTERISTICAS),
	AGREGAR_VITALIDAD(125, Tipo.CARACTERISTICAS),
	AGREGAR_INTELIGENCIA(126, Tipo.CARACTERISTICAS),
	RETIRAR_PM(127, Tipo.ARMA),
	AGREGAR_PM(128, Tipo.CARACTERISTICAS),
	ROBAR_KAMAS(130, Tipo.ARMA),
	AGREGAR_PORC_DANOS(138, Tipo.CARACTERISTICAS),
	AGREGAR_PUNTOS_ENERGIA(139, Tipo.UTILIZABLE),
	CAMBIA_LAS_PALABRAS(146, Tipo.ESPECIAL),
	CAMBIA_LA_APARIENCIA(149, Tipo.UTILIZABLE),
	RETIRA_SUERTE(152, Tipo.CARACTERISTICAS),
	RETIRA_VITALIDAD(153, Tipo.CARACTERISTICAS),
	RETIRA_AGILIDAD(154, Tipo.CARACTERISTICAS),
	RETIRA_INTELIGENCIA(155, Tipo.CARACTERISTICAS),
	RETIRA_SABIDURIA(156, Tipo.CARACTERISTICAS),
	RETIRA_FUERZA(157, Tipo.CARACTERISTICAS),
	AGREGA_PODS(158, Tipo.ESPECIAL),
	RETIRA_PODS(159, Tipo.ESPECIAL),
	AGREGAR_ESQUIVA_PERD_PA(160, Tipo.CARACTERISTICAS),
	AGREGAR_ESQUIVA_PERD_PM(161, Tipo.CARACTERISTICAS),
	RETIRA_ESQUIVA_PERD_PA(162, Tipo.CARACTERISTICAS),
	RETIRA__ESQUIVA_PERD_PM(163, Tipo.CARACTERISTICAS),
	REDUCIR_DANOS_REDUCIDOS(164, Tipo.CARACTERISTICAS),
	AGREGAR_DANOS_DOMINIO_ARMAS(165, Tipo.CARACTERISTICAS),
	RETIRAR_PA_FIJO_NO_ESQUIVABLE(168, Tipo.CARACTERISTICAS),
	RETIRAR_PM_FIJO(169, Tipo.CARACTERISTICAS),
	SUB_CRITICAL_HIT(171, Tipo.CARACTERISTICAS),
	SUB_REDUCE_DAMAGE_MAGIC(172, Tipo.ESPECIAL),
	SUB_REDUCE_DAMAGE_PHYSIC(173, Tipo.ESPECIAL),
	AGREGA_INICIATIVA(174, Tipo.ESPECIAL),
	RETIRA_INICIATIVA(175, Tipo.ESPECIAL),
	AGREGAR_PROSPECCION(176, Tipo.ESPECIAL),
	RETIRAR_PROSPECCION(177, Tipo.ESPECIAL),
	AGREGAR_CURAS(178, Tipo.CARACTERISTICAS),
	RETIRAR_CURAS(179, Tipo.CARACTERISTICAS),
	AGREGAR_CRIATURAS_INVOCABLES(182, Tipo.CARACTERISTICAS),
	AGREGA_REDUCCION_FISICA(183, Tipo.ESPECIAL),
	AGREGA_REDUCCION_MAGICA(184,  Tipo.ESPECIAL),
	DESCONOCIDO_193(193, Tipo.UTILIZABLE),
	GANAR_KAMAS(194, Tipo.UTILIZABLE),
	TRANSFORMA_EN_GFXID(197, Tipo.UTILIZABLE),
	RESUCITAR(206, Tipo.UTILIZABLE),
	AGREGAR_RES_PORC_TIERRA(210, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_AGUA(211, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_AIRE(212, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_FUEGO(213, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_NEUTRAL(214, Tipo.CARACTERISTICAS),
	RETIRAR_RES_PORC_TIERRA(215, Tipo.CARACTERISTICAS),
	RETIRAR_RES_PORC_AGUA(216, Tipo.CARACTERISTICAS),
	RETIRAR_RES_PORC_AIRE(217, Tipo.CARACTERISTICAS),
	RETIRAR_RES_PORC_FUEGO(218, Tipo.CARACTERISTICAS),
	RETIRAR_RES_PORC_NEUTRAL(219, Tipo.CARACTERISTICAS),
	AGREGAR_REENVIA_DANOS(220, Tipo.CARACTERISTICAS),
	AGREGAR_DANOS_TRAMPA(225, Tipo.CARACTERISTICAS),
	AGREGAR_PORC_DANOS_TRAMPA(226, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_TIERRA(240, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_AGUA(241, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_AIRE(242, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_FUEGO(243, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_NEUTRAL(244, Tipo.CARACTERISTICAS),
	RETIRA_RES_FIJA_TIERRA(245, Tipo.CARACTERISTICAS),
	RETIRA_RES_FIJA_AGUA(246, Tipo.CARACTERISTICAS),
	RETIRA_RES_FIJA_AGILIDAD(247,    Tipo.CARACTERISTICAS),
	RETIRA_RES_FIJA_FUEGO(248,    Tipo.CARACTERISTICAS),
	SUB_REDUCE_DAMAGE_NEUTRAL(249, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_PVP_TIERRA(250,   Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_PVP_AGUA(251, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_PVP_AIRE(252, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_PVP_FUEGO(253, Tipo.CARACTERISTICAS),
	AGREGAR_RES_PORC_PVP_NEUTRAL(254, Tipo.CARACTERISTICAS),
	SUB_REDUCE_DAMAGE_PERCENT_PVP_WATER(255, Tipo.CARACTERISTICAS),
	SUB_REDUCE_DAMAGE_PERCENT_PVP_EARTH(256, Tipo.CARACTERISTICAS),
	SUB_REDUCE_DAMAGE_PERCENT_PVP_WIND(257, Tipo.CARACTERISTICAS),
	SUB_REDUCE_DAMAGE_PERCENT_PVP_FIRE(258, Tipo.CARACTERISTICAS),
	SUB_REDUCE_DAMAGE_PERCENT_PVP_NEUTRAL(259, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_PVP_TIERRA(260, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_PVP_AGUA(261, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_PVP_AIRE(262, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_PVP_FUEGO(263, Tipo.CARACTERISTICAS),
	AGREGAR_RES_FIJA_PVP_NEUTRAL(264, Tipo.CARACTERISTICAS),
	HECHIZO_AGREGA_RANGO(281, Tipo.ESPECIAL),
	SPELL_SET_MODIFIABLE_RANGE(282, Tipo.ESPECIAL),
	HECHIZO_AGREGA_DANOS(283, Tipo.ESPECIAL),
	HECHIZO_AGREGA_CURAS(284, Tipo.ESPECIAL),
	SPELL_SUB_AP(285, Tipo.ESPECIAL),
	SPELL_SUB_DELAY(286, Tipo.ESPECIAL),
	SPELL_ADD_CRITICAL_HIT(287, Tipo.ESPECIAL),
	SPELL_REMOVE_LINE_CAST(288, Tipo.ESPECIAL),
	SPELL_REMOVE_LINE_OF_SIGHT(289, Tipo.ESPECIAL),
	SPELL_ADD_PER_TURN_CAST(290, Tipo.ESPECIAL),
	SPELL_ADD_PER_TARGET_CAST(291, Tipo.ESPECIAL),
	SPELL_SET_DELAY(292, Tipo.ESPECIAL),
	SPELL_ADD_BASE_DAMAGE(293, Tipo.ESPECIAL),
	SPELL_SUB_RANGE(294, Tipo.ESPECIAL),
	CAMUFLAJE_MOVER_DESAPARECE_BUFF(334, Tipo.ESPECIAL),
	CAMBIA_LA_APARIENCIA_2(335, Tipo.UTILIZABLE),
	VUELVE_AL_PUNTO_DE_GUARDADO(600, Tipo.UTILIZABLE),
	APRENDE_OFICIO(603, Tipo.UTILIZABLE),
	APRENDE_HECHIZO(604, Tipo.UTILIZABLE),
	AGREGAR_EXPERIENCIA(605, Tipo.UTILIZABLE),
	AGREGA_STAT_SABIDURIA(606, Tipo.UTILIZABLE),
	ADD_CHARACT_FUERZA(607, Tipo.UTILIZABLE),
	AGREGA_STAT_SUERTE(608, Tipo.UTILIZABLE),
	AGREGA_STAT_AGILIDAD(609, Tipo.UTILIZABLE),
	AGREGA_STAT_VITALIDAD(610, Tipo.UTILIZABLE),
	AGREGA_STAT_INTELIGENCIA(611, Tipo.UTILIZABLE),
	ADD_CHARACT_POINT(612, Tipo.UTILIZABLE),
	ADD_SPELL_POINT(613, Tipo.UTILIZABLE),
	AGREGA_EXPERIENCIA_OFICIO(614, Tipo.UTILIZABLE),
	OLVIDA_OFICIO(615, Tipo.UTILIZABLE),
	FORGOT_SPELL_LEVEL(616, Tipo.UTILIZABLE),
	CONSULT(620, Tipo.UTILIZABLE),
	INVOCA_CAPTURA(621, Tipo.UTILIZABLE),
	INVOCA_MONSTRUO(623, Tipo.UTILIZABLE),
	FIREWORK(654, Tipo.UTILIZABLE),
	CHANGE_ATTACK_ELEMENT(700, Tipo.ESPECIAL),
	REPAIR_BREAKABLE_ITEM(702, Tipo.ESPECIAL),
	CAPTURAR_MONSTRUO(705, Tipo.ESPECIAL),
	CAPTURAR_MONTURA(706, Tipo.ESPECIAL),
	ADDITIONAL_COST(710, Tipo.ESPECIAL),
	ARMA_DE_CAZA(795, Tipo.ESPECIAL),
	PUNTOS_DE_VIDA(800, Tipo.ESPECIAL),
	FECHA_RECIBIDO(805, Tipo.ESPECIAL),
	TAMANO(810, Tipo.ESPECIAL),
	TURNOS_RESTANTES(811, Tipo.ESPECIAL),
	BREAKABLE_ITEM_POINTS(812, Tipo.ESPECIAL),
	LLAVE_MAZMORRA(814, Tipo.ESPECIAL),
	AGREGA_SERENIDAD(930, Tipo.ESPECIAL),
	AGREGA_AGRESIVIDAD(931, Tipo.ESPECIAL),
	AGREGA_RESISTENCIA(932, Tipo.ESPECIAL),
	RETIRA_RESISTENCIA(933, Tipo.ESPECIAL),
	AGREGA_AMOR(934, Tipo.ESPECIAL),
	RETIRA_AMOR(935, Tipo.ESPECIAL),
	AGREGA_MADUREZ(936, Tipo.ESPECIAL),
	RELANTIZA_MADUREZ(937, Tipo.ESPECIAL),
	AUMENTA_CAPACIDADES_MASCOTA(939, Tipo.ESPECIAL),
	AUMENTA_CAPACIDAD(940, Tipo.ESPECIAL),
	OBJETO_CERCADO(948,  Tipo.ESPECIAL),
	OBJEVIVO_ITEM_ID(970, Tipo.ESPECIAL),
	OBJEVIVO_ESTADO(971, Tipo.ESPECIAL),
	OBJEVIVO_SKIN(972, Tipo.ESPECIAL),
	OBJEVIVO_TIPO(973, Tipo.ESPECIAL),
	OBJEVIVO_XP(974, Tipo.ESPECIAL),
	NPC_SEGUIDOR(999, Tipo.ESPECIAL);

	public enum Tipo 
	{
		CARACTERISTICAS,
		ARMA,
		UTILIZABLE,
		ESPECIAL
	}

	final private int id;
	final private Tipo tipo;

	private static final Map<Integer, Efectos> efectos = new HashMap<Integer, Efectos>();

	static 
	{
		for(Efectos efecto : values())
		{
			efectos.put(efecto.get_Id(), efecto);
		}
	}

	private Efectos(final int _id, final Tipo _tipo) 
	{
		id = _id;
		tipo = _tipo;
	}

	public int get_Id() 
	{
		return id;
	}

	public Tipo get_Tipo() 
	{
		return tipo;
	}

	public static Efectos get_Id(int id)
	{
		if (!efectos.containsKey(id)) 
		{
			throw new NoSuchElementException("Efecto " + id + " no existente");
		}
		return efectos.get(id);
	}
}
